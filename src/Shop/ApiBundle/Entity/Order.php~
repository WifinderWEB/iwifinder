<?php

namespace Shop\ApiBundle\Entity;

use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Class Order
 * @package Shop\ApiBundle\Entity
 * @ORM\Entity
 */
class Order{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter last name.", groups={"Order"})
     * @Assert\Regex(
     *       pattern="/^(([a-zA-Zа-яА-ЯёЁ]+)\s)+([a-zA-Zа-яА-ЯёЁ]+)$/",
     *       message="Field can contain only letters.",
     *       groups={"Order"}
     * )
     */
    protected $lastName;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter middle name.", groups={"Order"})
     * @Assert\Regex(
     *       pattern="/^(([a-zA-Zа-яА-ЯёЁ]+)\s)+([a-zA-Zа-яА-ЯёЁ]+)$/",
     *       message="Field can contain only letters.",
     *       groups={"Order"}
     * )
     */
    protected $middleName;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter first name.", groups={"Order"})
     * @Assert\Regex(
     *       pattern="/^(([a-zA-Zа-яА-ЯёЁ]+)\s)+([a-zA-Zа-яА-ЯёЁ]+)$/",
     *       message="Field can contain only letters.",
     *       groups={"Order"}
     * )
     */
    protected $firstName;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter country.", groups={"Order"})
     */
    protected $country;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter region.", groups={"Order"})
     */
    protected $region;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter city.", groups={"Order"})
     */
    protected $city;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter street.", groups={"Order"})
     */
    protected $street;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter house.", groups={"Order"})
     */
    protected $house;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $room;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $postcode;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter phone.", groups={"Order"})
     */
    protected $phone;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank(message="Please enter email.", groups={"Order"})
     */
    protected $email;

    /**
     * @ORM\Column(type="integer")
     */
    protected $discount;

    /**
     * @ORM\Column(type="float")
     */
    protected $itog;

    /**
     * @ORM\OneToMany(targetEntity="Goods", mappedBy="order")
     */
    protected $goods;
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->goods = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Set id
     *
     * @param integer $id
     * @return Order
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set lastName
     *
     * @param string $lastName
     * @return Order
     */
    public function setLastName($lastName)
    {
        $this->lastName = $lastName;

        return $this;
    }

    /**
     * Get lastName
     *
     * @return string 
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * Set middleName
     *
     * @param string $middleName
     * @return Order
     */
    public function setMiddleName($middleName)
    {
        $this->middleName = $middleName;

        return $this;
    }

    /**
     * Get middleName
     *
     * @return string 
     */
    public function getMiddleName()
    {
        return $this->middleName;
    }

    /**
     * Set firstName
     *
     * @param string $firstName
     * @return Order
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Get firstName
     *
     * @return string 
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * Set country
     *
     * @param string $country
     * @return Order
     */
    public function setCountry($country)
    {
        $this->country = $country;

        return $this;
    }

    /**
     * Get country
     *
     * @return string 
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * Set region
     *
     * @param string $region
     * @return Order
     */
    public function setRegion($region)
    {
        $this->region = $region;

        return $this;
    }

    /**
     * Get region
     *
     * @return string 
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * Set city
     *
     * @param string $city
     * @return Order
     */
    public function setCity($city)
    {
        $this->city = $city;

        return $this;
    }

    /**
     * Get city
     *
     * @return string 
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * Set street
     *
     * @param string $street
     * @return Order
     */
    public function setStreet($street)
    {
        $this->street = $street;

        return $this;
    }

    /**
     * Get street
     *
     * @return string 
     */
    public function getStreet()
    {
        return $this->street;
    }

    /**
     * Set house
     *
     * @param string $house
     * @return Order
     */
    public function setHouse($house)
    {
        $this->house = $house;

        return $this;
    }

    /**
     * Get house
     *
     * @return string 
     */
    public function getHouse()
    {
        return $this->house;
    }

    /**
     * Set room
     *
     * @param string $room
     * @return Order
     */
    public function setRoom($room)
    {
        $this->room = $room;

        return $this;
    }

    /**
     * Get room
     *
     * @return string 
     */
    public function getRoom()
    {
        return $this->room;
    }

    /**
     * Set postcode
     *
     * @param string $postcode
     * @return Order
     */
    public function setPostcode($postcode)
    {
        $this->postcode = $postcode;

        return $this;
    }

    /**
     * Get postcode
     *
     * @return string 
     */
    public function getPostcode()
    {
        return $this->postcode;
    }

    /**
     * Add goods
     *
     * @param \Shop\ApiBundle\Entity\Goods $goods
     * @return Order
     */
    public function addGood(\Shop\ApiBundle\Entity\Goods $goods)
    {
        $this->goods[] = $goods;
        $goods->setOrder($this);

        return $this;
    }

    /**
     * Remove goods
     *
     * @param \Shop\ApiBundle\Entity\Goods $goods
     */
    public function removeGood(\Shop\ApiBundle\Entity\Goods $goods)
    {
        $this->goods->removeElement($goods);
    }

    /**
     * Get goods
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getGoods()
    {
        return $this->goods;
    }

    /**
     * Set phone
     *
     * @param string $phone
     * @return Order
     */
    public function setPhone($phone)
    {
        $this->phone = $phone;

        return $this;
    }

    /**
     * Get phone
     *
     * @return string 
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * Set email
     *
     * @param string $email
     * @return Order
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }
}
